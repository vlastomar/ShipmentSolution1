// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using ShipmentSolution.Data;

#nullable disable

namespace ShipmentSolution.Data.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20250729050506_AddShipmentCreatedByUserId")]
    partial class AddShipmentCreatedByUserId
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.16")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRole", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedName")
                        .IsUnique()
                        .HasDatabaseName("RoleNameIndex")
                        .HasFilter("[NormalizedName] IS NOT NULL");

                    b.ToTable("AspNetRoles", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RoleId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetRoleClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUser", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("int");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("bit");

                    b.Property<bool>("LockoutEnabled")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("NormalizedEmail")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedUserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("SecurityStamp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("bit");

                    b.Property<string>("UserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedEmail")
                        .HasDatabaseName("EmailIndex");

                    b.HasIndex("NormalizedUserName")
                        .IsUnique()
                        .HasDatabaseName("UserNameIndex")
                        .HasFilter("[NormalizedUserName] IS NOT NULL");

                    b.ToTable("AspNetUsers", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.Property<string>("LoginProvider")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("ProviderKey")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("ProviderDisplayName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("LoginProvider", "ProviderKey");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserLogins", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("RoleId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("UserId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetUserRoles", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("LoginProvider")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("Name")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId", "LoginProvider", "Name");

                    b.ToTable("AspNetUserTokens", (string)null);
                });

            modelBuilder.Entity("ShipmentSolution.Data.Models.Customer", b =>
                {
                    b.Property<int>("CustomerId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CustomerId"));

                    b.Property<string>("City")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("PhoneNumber")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("PreferredShippingMethod")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<float>("ShippingCostThreshold")
                        .HasColumnType("real");

                    b.Property<string>("State")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("ZipCode")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.HasKey("CustomerId");

                    b.ToTable("Customers");

                    b.HasData(
                        new
                        {
                            CustomerId = 1,
                            City = "New York City",
                            Email = "john.doe@example.com",
                            FirstName = "John",
                            IsDeleted = false,
                            LastName = "Doe",
                            PhoneNumber = "1234567890",
                            PreferredShippingMethod = "Express",
                            ShippingCostThreshold = 50f,
                            State = "NY",
                            ZipCode = "10001"
                        },
                        new
                        {
                            CustomerId = 2,
                            City = "Los Angeles",
                            Email = "jane.smith@example.com",
                            FirstName = "Jane",
                            IsDeleted = false,
                            LastName = "Smith",
                            PhoneNumber = "9876543210",
                            PreferredShippingMethod = "Ground",
                            ShippingCostThreshold = 30f,
                            State = "CA",
                            ZipCode = "90001"
                        },
                        new
                        {
                            CustomerId = 3,
                            City = "Chicago",
                            Email = "michael.johnson@example.com",
                            FirstName = "Michael",
                            IsDeleted = false,
                            LastName = "Johnson",
                            PhoneNumber = "5555555555",
                            PreferredShippingMethod = "Express",
                            ShippingCostThreshold = 75f,
                            State = "IL",
                            ZipCode = "60601"
                        },
                        new
                        {
                            CustomerId = 4,
                            City = "Houston",
                            Email = "emily.brown@example.com",
                            FirstName = "Emily",
                            IsDeleted = false,
                            LastName = "Brown",
                            PhoneNumber = "1111111111",
                            PreferredShippingMethod = "Ground",
                            ShippingCostThreshold = 40f,
                            State = "TX",
                            ZipCode = "77001"
                        },
                        new
                        {
                            CustomerId = 5,
                            City = "Miami",
                            Email = "william.taylor@example.com",
                            FirstName = "William",
                            IsDeleted = false,
                            LastName = "Taylor",
                            PhoneNumber = "9999999999",
                            PreferredShippingMethod = "Express",
                            ShippingCostThreshold = 60f,
                            State = "FL",
                            ZipCode = "33101"
                        });
                });

            modelBuilder.Entity("ShipmentSolution.Data.Models.Delivery", b =>
                {
                    b.Property<int>("DeliveryId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("DeliveryId"));

                    b.Property<DateTime>("DateDelivered")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<int>("MailCarrierId")
                        .HasColumnType("int");

                    b.Property<int>("RouteId")
                        .HasColumnType("int");

                    b.Property<int>("ShipmentId")
                        .HasColumnType("int");

                    b.HasKey("DeliveryId");

                    b.HasIndex("MailCarrierId");

                    b.HasIndex("RouteId");

                    b.HasIndex("ShipmentId");

                    b.ToTable("Deliveries");

                    b.HasData(
                        new
                        {
                            DeliveryId = 1,
                            DateDelivered = new DateTime(2023, 6, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsDeleted = false,
                            MailCarrierId = 1,
                            RouteId = 1,
                            ShipmentId = 1
                        },
                        new
                        {
                            DeliveryId = 2,
                            DateDelivered = new DateTime(2023, 6, 2, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsDeleted = false,
                            MailCarrierId = 2,
                            RouteId = 2,
                            ShipmentId = 2
                        },
                        new
                        {
                            DeliveryId = 3,
                            DateDelivered = new DateTime(2023, 6, 3, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsDeleted = false,
                            MailCarrierId = 3,
                            RouteId = 3,
                            ShipmentId = 3
                        },
                        new
                        {
                            DeliveryId = 4,
                            DateDelivered = new DateTime(2023, 6, 11, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsDeleted = false,
                            MailCarrierId = 3,
                            RouteId = 4,
                            ShipmentId = 4
                        },
                        new
                        {
                            DeliveryId = 5,
                            DateDelivered = new DateTime(2023, 6, 5, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsDeleted = false,
                            MailCarrierId = 5,
                            RouteId = 5,
                            ShipmentId = 5
                        },
                        new
                        {
                            DeliveryId = 6,
                            DateDelivered = new DateTime(2023, 6, 7, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsDeleted = false,
                            MailCarrierId = 1,
                            RouteId = 6,
                            ShipmentId = 6
                        },
                        new
                        {
                            DeliveryId = 7,
                            DateDelivered = new DateTime(2023, 6, 11, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsDeleted = false,
                            MailCarrierId = 2,
                            RouteId = 7,
                            ShipmentId = 7
                        },
                        new
                        {
                            DeliveryId = 8,
                            DateDelivered = new DateTime(2023, 6, 3, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsDeleted = false,
                            MailCarrierId = 4,
                            RouteId = 8,
                            ShipmentId = 8
                        },
                        new
                        {
                            DeliveryId = 9,
                            DateDelivered = new DateTime(2023, 6, 9, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsDeleted = false,
                            MailCarrierId = 4,
                            RouteId = 9,
                            ShipmentId = 9
                        },
                        new
                        {
                            DeliveryId = 10,
                            DateDelivered = new DateTime(2023, 6, 5, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsDeleted = false,
                            MailCarrierId = 5,
                            RouteId = 10,
                            ShipmentId = 10
                        });
                });

            modelBuilder.Entity("ShipmentSolution.Data.Models.MailCarrier", b =>
                {
                    b.Property<int>("MailCarrierId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("MailCarrierId"));

                    b.Property<string>("CurrentLocation")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<DateTime?>("EndDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("PhoneNumber")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<int>("RouteId")
                        .HasColumnType("int");

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.HasKey("MailCarrierId");

                    b.ToTable("MailCarriers");

                    b.HasData(
                        new
                        {
                            MailCarrierId = 1,
                            CurrentLocation = "New York City",
                            Email = "david.wilson@example.com",
                            FirstName = "David",
                            IsDeleted = false,
                            LastName = "Wilson",
                            PhoneNumber = "1112223333",
                            RouteId = 1,
                            StartDate = new DateTime(2023, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Status = "Available"
                        },
                        new
                        {
                            MailCarrierId = 2,
                            CurrentLocation = "Los Angeles",
                            Email = "sarah.anderson@example.com",
                            FirstName = "Sarah",
                            IsDeleted = false,
                            LastName = "Anderson",
                            PhoneNumber = "4445556666",
                            RouteId = 2,
                            StartDate = new DateTime(2023, 2, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Status = "On Break"
                        },
                        new
                        {
                            MailCarrierId = 3,
                            CurrentLocation = "Chicago",
                            Email = "robert.miller@example.com",
                            FirstName = "Robert",
                            IsDeleted = false,
                            LastName = "Miller",
                            PhoneNumber = "7778889999",
                            RouteId = 3,
                            StartDate = new DateTime(2023, 3, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Status = "On a Delivery"
                        },
                        new
                        {
                            MailCarrierId = 4,
                            CurrentLocation = "Houston",
                            Email = "jennifer.thomas@example.com",
                            FirstName = "Jennifer",
                            IsDeleted = false,
                            LastName = "Thomas",
                            PhoneNumber = "1231231234",
                            RouteId = 4,
                            StartDate = new DateTime(2023, 4, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Status = "Available"
                        },
                        new
                        {
                            MailCarrierId = 5,
                            CurrentLocation = "Miami",
                            Email = "daniel.wilson@example.com",
                            FirstName = "Daniel",
                            IsDeleted = false,
                            LastName = "Wilson",
                            PhoneNumber = "9998887777",
                            RouteId = 5,
                            StartDate = new DateTime(2023, 5, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Status = "On Break"
                        });
                });

            modelBuilder.Entity("ShipmentSolution.Data.Models.Route", b =>
                {
                    b.Property<int>("RouteId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("RouteId"));

                    b.Property<float>("Distance")
                        .HasColumnType("real");

                    b.Property<string>("EndLocation")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<int>("MailCarrierId")
                        .HasColumnType("int");

                    b.Property<int>("Priority")
                        .HasColumnType("int");

                    b.Property<string>("StartLocation")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<int>("Stops")
                        .HasColumnType("int");

                    b.HasKey("RouteId");

                    b.HasIndex("MailCarrierId");

                    b.ToTable("Routes");

                    b.HasData(
                        new
                        {
                            RouteId = 1,
                            Distance = 150.5f,
                            EndLocation = "Albany",
                            IsDeleted = false,
                            MailCarrierId = 1,
                            Priority = 1,
                            StartLocation = "New York City",
                            Stops = 0
                        },
                        new
                        {
                            RouteId = 2,
                            Distance = 400.2f,
                            EndLocation = "San Francisco",
                            IsDeleted = false,
                            MailCarrierId = 2,
                            Priority = 1,
                            StartLocation = "Los Angeles",
                            Stops = 0
                        },
                        new
                        {
                            RouteId = 3,
                            Distance = 250.8f,
                            EndLocation = "Detroit",
                            IsDeleted = false,
                            MailCarrierId = 3,
                            Priority = 1,
                            StartLocation = "Chicago",
                            Stops = 0
                        },
                        new
                        {
                            RouteId = 4,
                            Distance = 50f,
                            EndLocation = "Los Angeles",
                            IsDeleted = false,
                            MailCarrierId = 3,
                            Priority = 2,
                            StartLocation = "Detroit",
                            Stops = 1
                        },
                        new
                        {
                            RouteId = 5,
                            Distance = 150.7f,
                            EndLocation = "Orlando",
                            IsDeleted = false,
                            MailCarrierId = 5,
                            Priority = 1,
                            StartLocation = "Miami",
                            Stops = 0
                        },
                        new
                        {
                            RouteId = 6,
                            Distance = 0f,
                            EndLocation = "Albany",
                            IsDeleted = false,
                            MailCarrierId = 1,
                            Priority = 2,
                            StartLocation = "Albany",
                            Stops = 0
                        },
                        new
                        {
                            RouteId = 7,
                            Distance = 400.2f,
                            EndLocation = "Seattle",
                            IsDeleted = false,
                            MailCarrierId = 2,
                            Priority = 2,
                            StartLocation = "San Francisco",
                            Stops = 1
                        },
                        new
                        {
                            RouteId = 8,
                            Distance = 250.8f,
                            EndLocation = "boston",
                            IsDeleted = false,
                            MailCarrierId = 4,
                            Priority = 1,
                            StartLocation = "Denver",
                            Stops = 0
                        },
                        new
                        {
                            RouteId = 9,
                            Distance = 50f,
                            EndLocation = "Dallas",
                            IsDeleted = false,
                            MailCarrierId = 4,
                            Priority = 2,
                            StartLocation = "boston",
                            Stops = 1
                        },
                        new
                        {
                            RouteId = 10,
                            Distance = 80f,
                            EndLocation = "San Francisco",
                            IsDeleted = false,
                            MailCarrierId = 5,
                            Priority = 2,
                            StartLocation = "Orlando",
                            Stops = 1
                        });
                });

            modelBuilder.Entity("ShipmentSolution.Data.Models.ShipmentEntity", b =>
                {
                    b.Property<int>("ShipmentId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ShipmentId"));

                    b.Property<string>("CreatedByUserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("CustomerId")
                        .HasColumnType("int");

                    b.Property<DateTime>("DeliveryDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Dimensions")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<float>("ShippingCost")
                        .HasColumnType("real");

                    b.Property<string>("ShippingMethod")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<float>("Weight")
                        .HasColumnType("real");

                    b.HasKey("ShipmentId");

                    b.HasIndex("CreatedByUserId");

                    b.HasIndex("CustomerId");

                    b.ToTable("Shipments");

                    b.HasData(
                        new
                        {
                            ShipmentId = 1,
                            CustomerId = 1,
                            DeliveryDate = new DateTime(2023, 6, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Dimensions = "12x10x8",
                            IsDeleted = false,
                            ShippingCost = 15f,
                            ShippingMethod = "Ground",
                            Weight = 10.5f
                        },
                        new
                        {
                            ShipmentId = 2,
                            CustomerId = 2,
                            DeliveryDate = new DateTime(2023, 6, 2, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Dimensions = "10x8x6",
                            IsDeleted = false,
                            ShippingCost = 25f,
                            ShippingMethod = "Express",
                            Weight = 7.2f
                        },
                        new
                        {
                            ShipmentId = 3,
                            CustomerId = 3,
                            DeliveryDate = new DateTime(2023, 6, 3, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Dimensions = "16x12x10",
                            IsDeleted = false,
                            ShippingCost = 18.5f,
                            ShippingMethod = "Ground",
                            Weight = 15.3f
                        },
                        new
                        {
                            ShipmentId = 4,
                            CustomerId = 4,
                            DeliveryDate = new DateTime(2023, 6, 4, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Dimensions = "8x6x4",
                            IsDeleted = false,
                            ShippingCost = 30f,
                            ShippingMethod = "Express",
                            Weight = 5.9f
                        },
                        new
                        {
                            ShipmentId = 5,
                            CustomerId = 5,
                            DeliveryDate = new DateTime(2023, 6, 5, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Dimensions = "14x10x8",
                            IsDeleted = false,
                            ShippingCost = 20f,
                            ShippingMethod = "Ground",
                            Weight = 12.8f
                        },
                        new
                        {
                            ShipmentId = 6,
                            CustomerId = 1,
                            DeliveryDate = new DateTime(2023, 6, 6, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Dimensions = "10x8x6",
                            IsDeleted = false,
                            ShippingCost = 14.5f,
                            ShippingMethod = "Ground",
                            Weight = 9.7f
                        },
                        new
                        {
                            ShipmentId = 7,
                            CustomerId = 4,
                            DeliveryDate = new DateTime(2023, 6, 7, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Dimensions = "8x6x4",
                            IsDeleted = false,
                            ShippingCost = 28f,
                            ShippingMethod = "Express",
                            Weight = 6.5f
                        },
                        new
                        {
                            ShipmentId = 8,
                            CustomerId = 5,
                            DeliveryDate = new DateTime(2023, 6, 8, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Dimensions = "12x10x8",
                            IsDeleted = false,
                            ShippingCost = 17f,
                            ShippingMethod = "Ground",
                            Weight = 11.2f
                        },
                        new
                        {
                            ShipmentId = 9,
                            CustomerId = 2,
                            DeliveryDate = new DateTime(2023, 6, 9, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Dimensions = "14x10x8",
                            IsDeleted = false,
                            ShippingCost = 32.5f,
                            ShippingMethod = "Express",
                            Weight = 8.9f
                        },
                        new
                        {
                            ShipmentId = 10,
                            CustomerId = 3,
                            DeliveryDate = new DateTime(2023, 6, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Dimensions = "16x12x10",
                            IsDeleted = false,
                            ShippingCost = 19.5f,
                            ShippingMethod = "Ground",
                            Weight = 13.7f
                        });
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("ShipmentSolution.Data.Models.Delivery", b =>
                {
                    b.HasOne("ShipmentSolution.Data.Models.MailCarrier", "MailCarrier")
                        .WithMany("Deliveries")
                        .HasForeignKey("MailCarrierId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("ShipmentSolution.Data.Models.Route", "Route")
                        .WithMany("Deliveries")
                        .HasForeignKey("RouteId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("ShipmentSolution.Data.Models.ShipmentEntity", "Shipment")
                        .WithMany("Deliveries")
                        .HasForeignKey("ShipmentId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("MailCarrier");

                    b.Navigation("Route");

                    b.Navigation("Shipment");
                });

            modelBuilder.Entity("ShipmentSolution.Data.Models.Route", b =>
                {
                    b.HasOne("ShipmentSolution.Data.Models.MailCarrier", "MailCarrier")
                        .WithMany("Routes")
                        .HasForeignKey("MailCarrierId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("MailCarrier");
                });

            modelBuilder.Entity("ShipmentSolution.Data.Models.ShipmentEntity", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityUser", "CreatedByUser")
                        .WithMany()
                        .HasForeignKey("CreatedByUserId");

                    b.HasOne("ShipmentSolution.Data.Models.Customer", "Customer")
                        .WithMany("Shipments")
                        .HasForeignKey("CustomerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("CreatedByUser");

                    b.Navigation("Customer");
                });

            modelBuilder.Entity("ShipmentSolution.Data.Models.Customer", b =>
                {
                    b.Navigation("Shipments");
                });

            modelBuilder.Entity("ShipmentSolution.Data.Models.MailCarrier", b =>
                {
                    b.Navigation("Deliveries");

                    b.Navigation("Routes");
                });

            modelBuilder.Entity("ShipmentSolution.Data.Models.Route", b =>
                {
                    b.Navigation("Deliveries");
                });

            modelBuilder.Entity("ShipmentSolution.Data.Models.ShipmentEntity", b =>
                {
                    b.Navigation("Deliveries");
                });
#pragma warning restore 612, 618
        }
    }
}
